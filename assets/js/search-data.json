{
  
    
        "post0": {
            "title": "Primitives",
            "content": "Build your own Jupyter Notebook meeting these College Board and CTE competencies . Define in a Class the following data types Demonstrate use of Primitives: int, double, boolean, string Demonstrate use of Wrapper Class object: String Describe in comments how each data type choice is appropriate to application Perform arithmetic expressions and assignment in a program code Code.org Lesson Determine what is result is in a variable as a result of an data type and expression (ie integer vs double) Perform an arithmetic expressions that uses casting, add comments that show how it produces desired result. Learn more by watching this College Board video Perform compound assignment operator (ie +=), add comments to describe the result of operator Additional requirements . Multiple inputs and outputs are required Jupyter NoteBook when committed to Fastpages must display Outputs Building something that helps you study for another class is encouraged, here are some ideas: MPG, GPA, Celsius &lt;--&gt; Fahrenheit, The nth Fibonacci, GCD, Primes in range of numbers, Points per Game . Computing force exerted by two charges . public class ForceCalculator { public ForceCalculator() { this.force = new double; this.q1 = new double; this.q2 = new double; this.r = new double; this.enterVals(); } private void enterVals() { Scanner dd = new Scanner(System.in); System.out.print(&quot;Enter q1 (charge of first particle): &quot;); try { this.q1 = input.nextDouble(); System.out.println(this.q1); } catch (Exception e) { System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } System.out.print(&quot;Enter q2 (charge of second particle): &quot;); try { this.q2 = input.nextDouble(); System.out.println(this.q2); } catch (Exception e) { System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } System.out.print(&quot;Enter r (distance between particles): &quot;); try { this.r = input.nextDouble(); System.out.println(this.r); } catch (Exception e) { System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } } public double calculate() { double k = 8.987551787e9; double force = this.q1 * this.q2 * k / (this.r * this.r); return force; } public static void main(String[] args) { ForceCalculator force = new ForceCalculator(); System.out.println(&quot;Force: &quot; + String.format(&quot;%.2f&quot;, force.calculate())); } } . | this.force = new double; &#39;[&#39; expected | this.q1 = new double; &#39;[&#39; expected | this.q2 = new double; &#39;[&#39; expected | this.r = new double; &#39;[&#39; expected . ForceCalculator.main(null); .",
            "url": "https://xu-ellen.github.io/ap-csa-fastpages/jupyter/2022/08/23/primitives.html",
            "relUrl": "/jupyter/2022/08/23/primitives.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Bash Blog Post",
            "content": "echo &quot;hi&quot; . Bash Blog Post . Is there anything we use to verify tools we install? Think about versions. | . apt list --installed or dpkg can be used to see installed packages and verify the version of the tools we install. . Is there anything we could verify with Anaconda? | . conda list or conda info can be used to see installed packages within conda environment or see what environments we have on our machine. . How would you update a repository? | . apt update or apt upgrade can be used to update the packages repository. . Really cool would be automating a procedure from installation. | . apt install -y &lt;package&gt; can be used to install a package and automated into a script. .",
            "url": "https://xu-ellen.github.io/ap-csa-fastpages/jupyter/2022/08/23/bash.html",
            "relUrl": "/jupyter/2022/08/23/bash.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Python Blog Post",
            "content": "Python . print (&quot;Hello&quot;) . Hello .",
            "url": "https://xu-ellen.github.io/ap-csa-fastpages/jupyter/2022/08/22/python.html",
            "relUrl": "/jupyter/2022/08/22/python.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Java Notebook Blog Post",
            "content": "Java . System.out.println(&quot;Hello&quot;) . Hello .",
            "url": "https://xu-ellen.github.io/ap-csa-fastpages/jupyter/2022/08/22/java.html",
            "relUrl": "/jupyter/2022/08/22/java.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "First post",
            "content": "Hi, this is my first post! . .",
            "url": "https://xu-ellen.github.io/ap-csa-fastpages/markdown/2022/08/21/first-post.html",
            "relUrl": "/markdown/2022/08/21/first-post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://xu-ellen.github.io/ap-csa-fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Notes",
          "content": "Primitives . Primitives are built-in datatypes in Java. They are: int, long, float, double, boolean, char, byte, short. Lower case is primitive, uppercase is a wrapper class. Each time you use a wrapper class, you turn the primitive into an object which has methods you can execute (ex. String.[command]). . Static vs Dynamic . Scanner is Java’s console input. . import java.util.Scanner; Scanner input; input = new Scanner(System.in); .",
          "url": "https://xu-ellen.github.io/ap-csa-fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Vocab",
          "content": "Bytecode is the machine code that is executed by the JVM. | .",
          "url": "https://xu-ellen.github.io/ap-csa-fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://xu-ellen.github.io/ap-csa-fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}